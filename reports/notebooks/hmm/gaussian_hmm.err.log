Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Helper functions for plotting
from dynamax.plotting import CMAP, COLORS, white_to_color_cmap

def plot_gaussian_hmm(hmm, params, emissions, states,  title="Emission Distributions", alpha=0.25):
    lim = 0.85 * abs(emissions).max()
    XX, YY = jnp.meshgrid(jnp.linspace(-lim, lim, 100), jnp.linspace(-lim, lim, 100))
    grid = jnp.column_stack((XX.ravel(), YY.ravel()))

    plt.figure()
    for k in range(hmm.num_states):
        lls = hmm.emission_distribution(params, k).log_prob(grid)
        plt.contour(XX, YY, jnp.exp(lls).reshape(XX.shape), cmap=white_to_color_cmap(COLORS[k]))
        plt.plot(emissions[states == k, 0], emissions[states == k, 1], "o", mfc=COLORS[k], mec="none", ms=3, alpha=alpha)

    plt.plot(emissions[:, 0], emissions[:, 1], "-k", lw=1, alpha=alpha)
    plt.xlabel("$y_1$")
    plt.ylabel("$y_2$")
    plt.title(title)
    plt.tight_layout()


def plot_gaussian_hmm_data(hmm, params, emissions, states, xlim=None):
    num_timesteps = len(emissions)
    emission_dim = hmm.emission_dim

    # Plot the data superimposed on the generating state sequence
    plt.figure()
    lim = 1.05 * abs(emissions).max()
    plt.imshow(
        states[None, :],
        aspect="auto",
        interpolation="none",
        cmap=CMAP,
        vmin=0,
        vmax=len(COLORS) - 1,
        extent=(0, num_timesteps, -lim, emission_dim * lim),
        alpha=1,
    )

    means = params.emissions.means[states]
    for d in range(emission_dim):
        plt.plot(emissions[:, d] + lim * d, "-k")
        plt.plot(means[:, d] + lim * d, ":k")

    if xlim is None:
        plt.xlim(0, num_timesteps)
    else:
        plt.xlim(xlim)

    plt.xlabel("time")
    plt.yticks(lim * jnp.arange(emission_dim), ["$y_{}$".format(d + 1) for d in range(emission_dim)])

    plt.title("Simulated data from an HMM")
    plt.tight_layout()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn [3], line 2[0m
[1;32m      1[0m [38;5;66;03m# Helper functions for plotting[39;00m
[0;32m----> 2[0m [38;5;28;01mfrom[39;00m [38;5;21;01mdynamax[39;00m[38;5;21;01m.[39;00m[38;5;21;01mplotting[39;00m [38;5;28;01mimport[39;00m CMAP, COLORS, white_to_color_cmap
[1;32m      4[0m [38;5;28;01mdef[39;00m [38;5;21mplot_gaussian_hmm[39m(hmm, params, emissions, states,  title[38;5;241m=[39m[38;5;124m"[39m[38;5;124mEmission Distributions[39m[38;5;124m"[39m, alpha[38;5;241m=[39m[38;5;241m0.25[39m):
[1;32m      5[0m     lim [38;5;241m=[39m [38;5;241m0.85[39m [38;5;241m*[39m [38;5;28mabs[39m(emissions)[38;5;241m.[39mmax()

[0;31mModuleNotFoundError[0m: No module named 'dynamax.plotting'
ModuleNotFoundError: No module named 'dynamax.plotting'

